
//! Autogenerated weights for `sherry_pallet`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 42.0.0
//! DATE: 2025-01-26, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Plutuss-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/solochain-template-node
// benchmark
// pallet
// --pallet
// sherry-pallet
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --chain
// dev
// --wasm-execution
// compiled
// --output
// ./runtime/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `sherry_pallet`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> sherry_pallet::WeightInfo for WeightInfo<T> {
	/// Storage: `SherryModule::StoredValue` (r:0 w:1)
	/// Proof: `SherryModule::StoredValue` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `MaxEncodedLen`)
	fn set_value() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_000_000 picoseconds.
		Weight::from_parts(3_000_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `SherryModule::StoredValue` (r:1 w:1)
	/// Proof: `SherryModule::StoredValue` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `MaxEncodedLen`)
	fn increment_value() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `70`
		//  Estimated: `1490`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(4_000_000, 0)
			.saturating_add(Weight::from_parts(0, 1490))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
